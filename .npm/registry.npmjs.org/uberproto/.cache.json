{"_id":"uberproto","_rev":"19-4d9bc4ff908828f9932aab51f0d4037d","name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","dist-tags":{"latest":"1.2.0"},"versions":{"0.0.9":{"name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","version":"0.0.9","homepage":"http://daffl.github.com/uberproto","repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"main":"lib/proto","directories":{"lib":"lib"},"scripts":{"test":"nodeunit test"},"engines":{"node":"*"},"_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"_id":"uberproto@0.0.9","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.5","_defaultsLoaded":true,"dist":{"shasum":"4035caedec88aeab4c0e9d911c7eba4bafb679ac","tarball":"https://registry.npmjs.org/uberproto/-/uberproto-0.0.9.tgz"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"1.0.0":{"name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","version":"1.0.0","homepage":"http://daffl.github.com/uberproto","repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"main":"lib/proto","directories":{"lib":"lib"},"scripts":{"test":"nodeunit test"},"engines":{"node":"*"},"_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"_id":"uberproto@1.0.0","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.5","_defaultsLoaded":true,"dist":{"shasum":"d95cd56f10b286df94b8e39bce45437afc6a9253","tarball":"https://registry.npmjs.org/uberproto/-/uberproto-1.0.0.tgz"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"1.0.1":{"name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","version":"1.0.1","homepage":"http://daffl.github.com/uberproto","repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"main":"lib/proto","directories":{"lib":"lib"},"scripts":{"test":"nodeunit test"},"engines":{"node":"*"},"_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"_id":"uberproto@1.0.1","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.5","_defaultsLoaded":true,"dist":{"shasum":"60dea933e95d2cd6ed743fb7f89e9a431c55c1de","tarball":"https://registry.npmjs.org/uberproto/-/uberproto-1.0.1.tgz"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"1.0.2":{"name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","version":"1.0.2","homepage":"http://daffl.github.com/uberproto","repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"main":"lib/proto","directories":{"lib":"lib"},"scripts":{"test":"nodeunit test"},"engines":{"node":"*"},"_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"_id":"uberproto@1.0.2","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.5","_defaultsLoaded":true,"dist":{"shasum":"897cf2cb121695e8492d5555e441e7653fd04c81","tarball":"https://registry.npmjs.org/uberproto/-/uberproto-1.0.2.tgz"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"1.0.3":{"name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","version":"1.0.3","homepage":"http://daffl.github.com/uberproto","repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"main":"lib/proto","directories":{"lib":"lib"},"scripts":{"test":"nodeunit test"},"engines":{"node":"*"},"_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"_id":"uberproto@1.0.3","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"c7f69a4a39b5ea1f43e25c65184d674d6ccf135c","tarball":"https://registry.npmjs.org/uberproto/-/uberproto-1.0.3.tgz"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"1.1.0":{"name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","version":"1.1.0","homepage":"http://daffl.github.com/uberproto","repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"main":"lib/proto","directories":{"lib":"lib"},"scripts":{"test":"mocha test"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"devDependencies":{"mocha":"~ 1.8.0","grunt":"~ 0.4.0","grunt-contrib-concat":"*","grunt-contrib-uglify":"*","grunt-contrib-jshint":"*"},"engines":{"node":"*"},"_id":"uberproto@1.1.0","dist":{"shasum":"5f574120e529c4de1c4d42239f3000d16b68b721","tarball":"https://registry.npmjs.org/uberproto/-/uberproto-1.1.0.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"1.1.1":{"name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","version":"1.1.1","homepage":"http://daffl.github.com/uberproto","repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"main":"lib/proto","directories":{"lib":"lib"},"scripts":{"test":"grunt"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"devDependencies":{"mocha":"~ 1.8.0","grunt":"~ 0.4.0","grunt-contrib-concat":"*","grunt-contrib-uglify":"*","grunt-contrib-jshint":"*","grunt-release":"~0.6.0","grunt-simple-mocha":"~0.4.0","grunt-cli":"~0.1.12"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/daffl/uberproto/issues"},"_id":"uberproto@1.1.1","dist":{"shasum":"797cdcf45ea942bf30b3b9fa137b2d1d934f220b","tarball":"https://registry.npmjs.org/uberproto/-/uberproto-1.1.1.tgz"},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}]},"1.1.2":{"name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","version":"1.1.2","homepage":"http://daffl.github.com/uberproto","repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"main":"lib/proto","directories":{"lib":"lib"},"scripts":{"test":"grunt"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"devDependencies":{"mocha":"~ 1.8.0","grunt":"~ 0.4.0","grunt-contrib-concat":"*","grunt-contrib-uglify":"*","grunt-contrib-jshint":"*","grunt-release":"~0.6.0","grunt-simple-mocha":"~0.4.0","grunt-cli":"~0.1.12"},"engines":{"node":"*"},"gitHead":"928bd51b661dd3f033b054beec3471d095396703","bugs":{"url":"https://github.com/daffl/uberproto/issues"},"_id":"uberproto@1.1.2","_shasum":"fd077dd713c453051c6058934b498ffe7e90acdb","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"dist":{"shasum":"fd077dd713c453051c6058934b498ffe7e90acdb","tarball":"https://registry.npmjs.org/uberproto/-/uberproto-1.1.2.tgz"}},"1.2.0":{"name":"uberproto","description":"JavaScript object inheritance sugar: Easy extension, mixins, super methods, proxies","version":"1.2.0","homepage":"http://daffl.github.com/uberproto","repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"main":"lib/proto","directories":{"lib":"lib"},"scripts":{"test":"grunt"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"devDependencies":{"mocha":"~ 1.8.0","grunt":"~ 0.4.0","grunt-contrib-concat":"*","grunt-contrib-uglify":"*","grunt-contrib-jshint":"*","grunt-release":"~0.6.0","grunt-simple-mocha":"~0.4.0","grunt-cli":"~0.1.12"},"engines":{"node":"*"},"gitHead":"e151d50154f190e9b2f4428d1bd8edbbc8a82415","bugs":{"url":"https://github.com/daffl/uberproto/issues"},"_id":"uberproto@1.2.0","_shasum":"61d4eab024f909c4e6ea52be867c4894a4beeb76","_from":".","_npmVersion":"2.14.8","_nodeVersion":"4.1.1","_npmUser":{"name":"daffl","email":"daff@neyeon.de"},"maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"dist":{"shasum":"61d4eab024f909c4e6ea52be867c4894a4beeb76","tarball":"https://registry.npmjs.org/uberproto/-/uberproto-1.2.0.tgz"}}},"readme":"# Uberproto\n\nUberproto is a simple base object that adds some sugar to ECMAScript 5 style object inheritance\nin JavaScript.\n\nHere is what it can do in a nutshell:\n\n- Easily extend objects\n- Initialization methods\n- Super methods\n- Mixins\n- Method proxies\n\nWith a small footprint (about 1Kb minified) and an easy to handle API of just\nfour methods it also doesn't add a lot of baggage to your JavaScript application.\n\n## Usage\n\nUberProto can be used as a [CommonJS AMD](https://github.com/amdjs/amdjs-api/wiki/AMD) module\n(e.g. with [RequireJS](http://requirejs.org/)), [NodeJS](http://nodejs.org) or directly\nin the browser. If no module loader is available, the global variable _Proto_\nwill be defined after you include the script. In the browser you have two options:\nThe default build that includes EcmaScript 5 shims or, if you only support modern browsers or\nprovide the shims already, without.\n\n### Using AMD (e.g. RequireJS)\n\nMake sure proto.js is in the right folder and then just define a module like this:\n\n```javascript\ndefine(['proto'], function(Proto) {\n\t// Source goes here\n});\n```\n\n### In the browser\n\n[Download proto.min.js](https://raw.github.com/daffl/uberproto/master/dist/proto.min.js) or\nthe EcmaScript 5 version [proto.es5.min.js](https://raw.github.com/daffl/uberproto/master/dist/proto.es5.min.js).\nYou can also `bower install uberproto` if you are using [Bower](http://twitter.github.com/bower/)\nas your package manager. Then simply include the file as a script:\n\n```html\n<script type=\"text/javascript\" src=\"proto.min.js\"></script>\n```\n\nNow *Proto* is available as a global vairable.\n\n### With NodeJS\n\nAfter installing the package using NPM\n\n> npm install uberproto\n\njust require it like any other module:\n\n```javascript\nvar Proto = require('uberproto');\n```\n\n## Creating objects\n\n### Extend\n\nYou can extend any UberProto object by using *extend* to create a new object that inherits from the current one.\nInternally [Object.create](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/create) is\nbeing used (the library provides a polyfill for browsers that don't support Object.create)\nand the prototype is set to the object that you are extending.\nIf defined, the *init* method will be used as the constructor.\nThat way you can define a simple Person object (which will be reused throughout the next paragraphs):\n\n```javascript\nvar Person = Proto.extend({\n\tinit : function(name) {\n\t\tthis.name = name;\n\t},\n\n\tfullName : function() {\n\t\treturn this.name;\n\t}\n});\n```\n\nYou can also define a plain object and pass it to UberProto object methods:\n\n```javascript\nvar PersonObject = {\n\tinit : function(name) {\n\t\tthis.name = name;\n\t},\n\n\tfullName : function() {\n\t\treturn this.name;\n\t}\n};\n```\n\nPlay around with the examples in [this JSFiddle](http://jsfiddle.net/Daff/2GB8n/1/).\n\n### Initialize\n\nYou can create a new instance by calling *create*. This will create a new object and call the *init* method,\nif defined:\n\n```javascript\nvar dave = Person.create('Dave');\nconsole.log(dave.name); // -> 'Dave'\nconsole.log(dave.fullName()); // -> 'Dave'\n```\n\nIf you are using *init* already for something else you can also set the *__init* property to the method name\nof your intialization method:\n\n```javascript\nvar MyPerson = Proto.extend({\n\t__init : 'construct',\n\n\tconstruct : function(name) {\n\t\tthis.name = name;\n\t}\n});\n```\n\nFor calling the constructor on a plain object, call *create* on an UberProto object:\n\n```javascript\nvar john = Proto.create.call(PersonObject, 'John');\nconsole.log(john.fullName()); // -> 'John'\n```\n\nOverwriting *create* is great if you want to customize the way new objects are being\ninstantiated.\n\n### Super methods\n\nIn each method `this._super` refers to the method being overwritten, if there is one.\nFor our Person object, for example, it would be a lot better if it also had a last name:\n\n```javascript\nvar BetterPerson = Person.extend({\n\tinit : function(name, lastname) {\n\t\t// If you want to pass all original arguments to the\n\t\t// _super method just use apply:\n\t\t// this._super.apply(this, arguments);\n\t\tthis._super(name);\n\t\tthis.lastname = lastname;\n\t},\n\n\tfullName : function() {\n\t\treturn this._super() + ' ' + this.lastname;\n\t}\n});\n\nvar dave = BetterPerson.create('Dave', 'Doe');\nconsole.log(dave.name); // -> 'Dave'\nconsole.log(dave.lastname); // -> 'Doe'\nconsole.log(dave.fullName()); // -> 'Dave Doe'\n```\n\nYou can also extend a plain object if you don't want to inherit from an UberProto object:\n\n```javascript\nvar BetterPersonObject = Proto.extend({\n\tinit : function(name, lastname) {\n\t\tthis._super(name);\n\t\tthis.lastname = lastname;\n\t},\n\n\tfullName : function() {\n\t\treturn this._super() + ' ' + this.lastname;\n\t}\n}, PersonObject); // Pass the plain object as the second parameter\n```\n\n### Mixins\n\nMixins add functionality to an existing object. Mixins can also access their super methods using `this._super`.\nThis will either refer the overwritten method on the object itself or the one on the prototype:\n\n```javascript\nPerson.mixin({\n\tinit : function()\n\t{\n\t\tthis._super.apply(this, arguments);\n\t\tthis.can_sing = true;\n\t},\n\n\tsing : function()\n\t{\n\t\treturn 'Laaaa';\n\t}\n});\n\nvar dude = Person.create('Dude');\nconsole.log(dude.sing()); // -> 'Laaaa'\nconsole.log(dude.can_sing); // -> true\n```\n\nActual instances can be mixed in just the same:\n\n```javascript\nvar operaSinger = Person.create('Pavarotti');\noperaSinger.mixin({\n\tsing : function()\n\t{\n\t\treturn this._super() + ' Laalaaa!';\n\t}\n});\n\nconsole.log(operaSinger.sing()); // -> 'Laaaa Laalaaa!'\n```\n\nAnd you can also mix into plain objects e.g. overwriting the constructor of PersonObject:\n\n```javascript\nProto.mixin({\n\tfullName : function() {\n\t\treturn 'My name is: ' + this._super();\n\t}\n}, PersonObject);\n\n// Create a plain object without calling the constructor\nvar instance = Object.create(PersonObject);\ninstance.name = 'Dude';\nconsole.log(instance.fullName()); // 'My name is: Dude'\n```\n\n### Method proxy\n\nYou can create proxy callbacks, that make sure that _this_ will always\npoint to the right object:\n\n```javascript\nvar callback = operaSinger.proxy('fullName');\nconsole.log(callback()); // -> 'Pavarotti'\n```\n\nAnd you can partially apply function arguments:\n\n```javascript\noperaSinger.mixin({\n\tsing : function(text)\n\t{\n\t\treturn this._super() + ' ' + text;\n\t}\n});\n\nvar singHello = operaSinger.proxy('sing', 'Helloooooo!');\n\nsingHello() // Laaaa Laalaaa! Helloooooo!\n```\n\n`proxy` only works on objects extended from UberProto.\n\n## Changelog\n\n__1.2.0__\n\n* Use `Object.defineProperty` if available to extend all properties ([#10](https://github.com/daffl/uberproto/issues/10), [#11](https://github.com/daffl/uberproto/pull/11))\n\n__1.1.2__\n\n* Changed to proper Universal Module Definition ([#9](https://github.com/daffl/uberproto/pull/9))\n\n__1.1.1__\n\n* Updating component and bower ([#6](https://github.com/daffl/uberproto/pull/6))\n* Only wrap functions that are actually calling ._super ([#7](https://github.com/daffl/uberproto/pull/7))\n* Improved build and tests\n\n__1.1.0__\n\n* Extract ES5 shims (build shim-less version)\n* Use Function.bind for proxy\n* Switched test suite to [Mocha](http://visionmedia.github.com/mocha/)\n* [GruntJS](http://gruntjs.com/) build\n* [Bower](http://twitter.github.com/bower/) component: `bower install uberproto`\n\n__1.0.3__\n\n* Added `Object.getPrototypeOf` shim\n* Updated documentation\n* Added Travis CI\n\n__1.0.2__\n\n* Added `__init` property to allow constructor functions to be named other than *init*. Fixes issue [#1](https://github.com/daffl/uberproto/pull/1)\n\n__1.0.1__\n\n* API now usable with plain objects like `Proto.mixin({}, PlainObject)`\n\n__1.0.0__\n\n* Initial stable release\n\n## License\n\nCopyright (C) 2013 David Luecke daff@neyeon.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n[![Build Status](https://secure.travis-ci.org/daffl/uberproto.png)](http://travis-ci.org/daffl/uberproto)\n","maintainers":[{"name":"daffl","email":"daff@neyeon.de"}],"time":{"modified":"2015-11-29T18:33:34.685Z","created":"2012-02-06T02:43:59.640Z","0.0.9":"2012-02-06T02:44:00.757Z","1.0.0":"2012-03-01T21:07:01.734Z","1.0.1":"2012-03-24T22:34:58.462Z","1.0.2":"2012-05-10T04:46:37.797Z","1.0.3":"2012-09-07T03:13:28.213Z","1.1.0":"2013-03-21T14:30:48.502Z","1.1.1":"2014-01-23T18:45:49.393Z","1.1.2":"2014-06-14T01:08:38.164Z","1.2.0":"2015-11-29T18:33:34.685Z"},"author":{"name":"David Luecke","email":"daff@neyeon.com","url":"http://neyeon.com"},"repository":{"type":"git","url":"git://github.com/daffl/uberproto.git"},"readmeFilename":"readme.md","homepage":"http://daffl.github.com/uberproto","bugs":{"url":"https://github.com/daffl/uberproto/issues"},"_attachments":{},"_etag":"W/\"565b44fe-4a7b\"","_lastModified":"Sun, 29 Nov 2015 18:33:34 GMT"}